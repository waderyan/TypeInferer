{fun {f : B1}  : B2
  {fun {x : B3}  : B4
    {fun {y : B5}  : B6
      {cons x {f {f y}}}}}}


Labels
[1] = fun1
[2] = fun2
[3] = fun3
[4] = cons



Constraints
[1] = f -> [2]
[1] = B1 -> B2
[2] = x -> [3]
[2] = B3 -> B4
[3] = y -> [4]
[3] = B5 -> B6
[4] = list x
f = [(f y)] -> [(f (f y))]
f = y -> [(f y)]
[(f (f y))] = list x


INITIALIZATION

stack
-----
[1] = f -> [2]
[1] = B1 -> B2
[2] = x -> [3]
[2] = B3 -> B4
[3] = y -> [4]
[3] = B5 -> B6
[4] = list x
f = [(f y)] -> [(f (f y))]
f = y -> [(f y)]
[(f (f y))] = list x


sub
----
EMPTY


--------------------------------------------------------------------------
ROUND 1
--------------------------------------------------------------------------

stack
-----
f -> [2] = B1 -> B2
[2] = x -> [3]
[2] = B3 -> B4
[3] = y -> [4]
[3] = B5 -> B6
[4] = list x
f = [(f y)] -> [(f (f y))]
f = y -> [(f y)]
[(f (f y))] = list x

sub
----
[1] = f -> [2]


--------------------------------------------------------------------------
ROUND 2
--------------------------------------------------------------------------

stack
-----
f = B1
[2] = B2
[2] = x -> [3]
[2] = B3 -> B4
[3] = y -> [4]
[3] = B5 -> B6
[4] = list x
f = [(f y)] -> [(f (f y))]
f = y -> [(f y)]
[(f (f y))] = list x

sub
----
[1] = f -> [2]


--------------------------------------------------------------------------
ROUND 3
--------------------------------------------------------------------------

stack
-----
[2] = B2
[2] = x -> [3]
[2] = B3 -> B4
[3] = y -> [4]
[3] = B5 -> B6
[4] = list x
B1 = [(f y)] -> [(f (f y))]
B1 = y -> [(f y)]
[(f (f y))] = list x

sub
----
[1] = B1 -> [2]
f = B1


--------------------------------------------------------------------------
ROUND 4
--------------------------------------------------------------------------

stack
-----
B2 = x -> [3]
B2 = B3 -> B4
[3] = y -> [4]
[3] = B5 -> B6
[4] = list x
B1 = [(f y)] -> [(f (f y))]
B1 = y -> [(f y)]
[(f (f y))] = list x

sub
----
[1] = B1 -> B2
f = B1
[2] = B2


--------------------------------------------------------------------------
ROUND 5
--------------------------------------------------------------------------

stack
-----
x -> [3] = B3 -> B4
[3] = y -> [4]
[3] = B5 -> B6
[4] = list x
B1 = [(f y)] -> [(f (f y))]
B1 = y -> [(f y)]
[(f (f y))] = list x

sub
----
[1] = B1 -> x -> [3]
f = B1
[2] = x -> [3]
B2 = x -> [3]


--------------------------------------------------------------------------
ROUND 6
-------------------------------------------------------------------------

stack
-----
x = B3
[3] = B4
[3] = y -> [4]
[3] = B5 -> B6
[4] = list x
B1 = [(f y)] -> [(f (f y))]
B1 = y -> [(f y)]
[(f (f y))] = list x

sub
----
[1] = B1 -> x -> [3]
f = B1
[2] = x -> [3]
B2 = x -> [3]

--------------------------------------------------------------------------
ROUND 7
--------------------------------------------------------------------------

stack
-----
[3] = B4
[3] = y -> [4]
[3] = B5 -> B6
[4] = list B3
B1 = [(f y)] -> [(f (f y))]
B1 = y -> [(f y)]
[(f (f y))] = list B3

sub
----
[1] = B1 -> B3 -> [3]
f = B1
[2] = B3 -> [3]
B2 = B3 -> [3]
x = B3

--------------------------------------------------------------------------
ROUND 7
--------------------------------------------------------------------------

stack
-----
B4 = y -> [4]
B4 = B5 -> B6
[4] = list B3
B1 = [(f y)] -> [(f (f y))]
B1 = y -> [(f y)]
[(f (f y))] = list B3

sub
----
[1] = B1 -> B3 -> [3]
f = B1
[2] = B3 -> [3]
B2 = B3 -> [3]
x = B3
[3] = B4

--------------------------------------------------------------------------
ROUND 8
--------------------------------------------------------------------------

stack
-----
y -> [4] = B5 -> B6
[4] = list B3
B1 = [(f y)] -> [(f (f y))]
B1 = y -> [(f y)]
[(f (f y))] = list B3

sub
----
[1] = B1 -> B3 -> y -> [4]
f = B1
[2] = B3 -> y -> [4]
B2 = B3 -> y -> [4]
x = B3
[3] = y -> [4]
B4 = y -> [4]

--------------------------------------------------------------------------
ROUND 9
--------------------------------------------------------------------------

stack
-----
y = B5
[4] = B6
[4] = list B3
B1 = [(f y)] -> [(f (f y))]
B1 = y -> [(f y)]
[(f (f y))] = list B3

sub
----
[1] = B1 -> B3 -> y -> [4]
f = B1
[2] = B3 -> y -> [4]
B2 = B3 -> y -> [4]
x = B3
[3] = y -> [4]
B4 = y -> [4]


--------------------------------------------------------------------------
ROUND 10
--------------------------------------------------------------------------

stack
-----
[4] = B6
[4] = list B3
B1 = [(f y)] -> [(f (f y))]
B1 = B5 -> [(f y)]
[(f (f y))] = list B3

sub
----
[1] = B1 -> B3 -> B5 -> [4]
f = B1
[2] = B3 -> B5 -> [4]
B2 = B3 -> B5 -> [4]
x = B3
[3] = B5 -> [4]
B4 = B5 -> [4]
y = B5


--------------------------------------------------------------------------
ROUND 11
--------------------------------------------------------------------------

stack
-----
B6 = list B3
B1 = [(f y)] -> [(f (f y))]
B1 = B5 -> [(f y)]
[(f (f y))] = list B3

sub
----
[1] = B1 -> B3 -> B5 -> B6
f = B1
[2] = B3 -> B5 -> B6
B2 = B3 -> B5 -> B6
x = B3
[3] = B5 -> B6
B4 = B5 -> B6
y = B5
[4] = B6


--------------------------------------------------------------------------
ROUND 12
--------------------------------------------------------------------------


stack
-----
B1 = [(f y)] -> [(f (f y))]
B1 = B5 -> [(f y)]
[(f (f y))] = list B3

sub
----
[1] = B1 -> B3 -> B5 -> list B3
f = B1
[2] = B3 -> B5 -> list B3
B2 = B3 -> B5 -> list B3
x = B3
[3] = B5 -> list B3
B4 = B5 -> list B3
y = B5
[4] = list B3
B6 = list B3


--------------------------------------------------------------------------
ROUND 13
--------------------------------------------------------------------------


stack
-----
[(f y)] -> [(f (f y))] = B5 -> [(f y)]
[(f (f y))] = list B3

sub
----
[1] = [(f y)] -> [(f (f y))] -> B3 -> B5 -> list B3
f = [(f y)] -> [(f (f y))]
[2] = B3 -> B5 -> list B3
B2 = B3 -> B5 -> list B3
x = B3
[3] = B5 -> list B3
B4 = B5 -> list B3
y = B5
[4] = list B3
B6 = list B3
B1 = [(f y)] -> [(f (f y))]

--------------------------------------------------------------------------
ROUND 14
--------------------------------------------------------------------------

stack
-----
[(f y)] = B5
[(f (f y))] = [(f y)]
[(f (f y))] = list B3

sub
----
[1] = [(f y)] -> [(f (f y))] -> B3 -> B5 -> list B3
f = [(f y)] -> [(f (f y))]
[2] = B3 -> B5 -> list B3
B2 = B3 -> B5 -> list B3
x = B3
[3] = B5 -> list B3
B4 = B5 -> list B3
y = B5
[4] = list B3
B6 = list B3
B1 = [(f y)] -> [(f (f y))]

--------------------------------------------------------------------------
ROUND 15
--------------------------------------------------------------------------

stack
-----
[(f (f y))] = B5
[(f (f y))] = list B3

sub
----
[1] = B5 -> [(f (f y))] -> B3 -> B5 -> list B3
f = B5 -> [(f (f y))]
[2] = B3 -> B5 -> list B3
B2 = B3 -> B5 -> list B3
x = B3
[3] = B5 -> list B3
B4 = B5 -> list B3
y = B5
[4] = list B3
B6 = list B3
B1 = B5 -> [(f (f y))]
[(f y)] = B5

--------------------------------------------------------------------------
ROUND 16
--------------------------------------------------------------------------

stack
-----
B5 = list B3

sub
----
[1] = B5 -> B5 -> B3 -> B5 -> list B3
f = B5 -> B5
[2] = B3 -> B5 -> list B3
B2 = B3 -> B5 -> list B3
x = B3
[3] = B5 -> list B3
B4 = B5 -> list B3
y = B5
[4] = list B3
B6 = list B3
B1 = B5 -> B5
[(f y)] = B5
[(f (f y))] = B5

--------------------------------------------------------------------------
ROUND 17
--------------------------------------------------------------------------

stack
-----
empty

sub
----
[1] = list B3 -> list B3 -> B3 -> list B3 -> list B3
f = list B3 -> list B3
[2] = B3 -> list B3 -> list B3
B2 = B3 -> list B3 -> list B3
x = B3
[3] = list B3 -> list B3
B4 = list B3 -> list B3
y = list B3
[4] = list B3
B6 = list B3
B1 = list B3 -> list B3
[(f y)] = list B3
[(f (f y))] = list B3
B5 = list B3


--------------------------------------------------------------------------
RESULTS
--------------------------------------------------------------------------
B1 = listB3 -> listB3
B2 = B3 -> list B3 -> list B3
B3 = any value
B4 = list B3 -> list B3
B5 = list B3
B6 = list B3


This function is polymorphic. Similar to what we read about in the book when
finding the length of a list. The function didnt' need to know what type 
the list was. Our function does not need to know the type of B3 to work. 









